package service

import (
	"net/url"
	"strings"

	"github.com/ziren926/van-nav/database"
	"github.com/ziren926/van-nav/goscraper"
	"github.com/ziren926/van-nav/logger"
	"github.com/ziren926/van-nav/types"
	"github.com/ziren926/van-nav/utils"
)

func getIcon(url string) string {
	logger.LogInfo("getIcon: %s", url)
	s, err := goscraper.Scrape(url, 5)
	if err != nil {
		logger.LogError("getIcon: %s", err)
		return ""
	}
	var result string = ""
	if strings.Contains(s.Preview.Icon, "http:") || strings.Contains(s.Preview.Icon, "https:") {
		result = s.Preview.Icon
	} else {
		//  如果 link 最后一个是 /
		var first string = s.Preview.Link
		var second string = s.Preview.Icon
		if !strings.Contains(s.Preview.Link[len(s.Preview.Link)-1:len(s.Preview.Link)], "/") {
			first = s.Preview.Link + "/"
		}
		// 如果 icon 第一个是 /
		if strings.Contains(s.Preview.Icon[0:1], "/") {
			second = s.Preview.Icon[1:len(s.Preview.Icon)]
		}
		result = first + second
	}
	logger.LogInfo("getIcon: %s", result)
	return result
}

func LazyFetchLogo(url string, id int64) {
	// 如果 logo 为空，就去获取 logo
	logo := getIcon(url)
	UpdateToolIcon(id, logo)
}

func GetImgFromDB(url1 string) types.Img {
	urlEncoded := url.QueryEscape(url1)
	sql_get_img := `
		SELECT id,url,value FROM nav_img
		WHERE url=?;
		`
	rows, err := database.DB.Query(sql_get_img, urlEncoded)
	utils.CheckErr(err)
	var result types.Img
	var has bool = false
	for rows.Next() {
		err = rows.Scan(&result.Id, &result.Url, &result.Value)
		utils.CheckErr(err)
		has = true
	}
	if !has {
		var nullImg string
		l := strings.Split(url1, ".")
		suffix := l[len(l)-1]
		if strings.Contains(suffix, "svg") {
			nullImg = "PD94bWwgdmVyc2lvbj0iMS4wIiBzdGFuZGFsb25lPSJubyI/PjwhRE9DVFlQRSBzdmcgUFVCTElDICItLy9XM0MvL0RURCBTVkcgMS4xLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL0dyYXBoaWNzL1NWRy8xLjEvRFREL3N2ZzExLmR0ZCI+PHN2ZyB0PSIxNjQ5OTM0MTE0OTg2IiBjbGFzcz0iaWNvbiIgdmlld0JveD0iMCAwIDEwMjQgMTAyNCIgdmVyc2lvbj0iMS4xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHAtaWQ9IjI2NjEiIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjAwIiBoZWlnaHQ9IjIwMCI+PGRlZnM+PHN0eWxlIHR5cGU9InRleHQvY3NzIj5AZm9udC1mYWNlIHsgZm9udC1mYW1pbHk6IGZlZWRiYWNrLWljb25mb250OyBzcmM6IHVybCgiLy9hdC5hbGljZG4uY29tL3QvZm9udF8xMDMxMTU4X3U2OXc4eWh4ZHUud29mZjI/dD0xNjMwMDMzNzU5OTQ0IikgZm9ybWF0KCJ3b2ZmMiIpLCB1cmwoIi8vYXQuYWxpY2RuLmNvbS90L2ZvbnRfMTAzMTE1OF91Njl3OHloeGR1LndvZmY/dD0xNjMwMDMzNzU5OTQ0IikgZm9ybWF0KCJ3b2ZmIiksIHVybCgiLy9hdC5hbGljZG4uY29tL3QvZm9udF8xMDMxMTU4X3U2OXc4eWh4ZHUudHRmP3Q9MTYzMDAzMzc1OTk0NCIpIGZvcm1hdCgidHJ1ZXR5cGUiKTsgfQ0KPC9zdHlsZT48L2RlZnM+PHBhdGggZD0iTTUxMiAwQzIyOC40MzA3NjkgMCAwIDIyOC40MzA3NjkgMCA1MTJzMjI4LjQzMDc2OSA1MTIgNTEyIDUxMiA1MTItMjI4LjQzMDc2OSA1MTItNTEyUzc5NS41NjkyMzEgMCA1MTIgMHogbTAgNTkuMDc2OTIzYzEwMi40IDAgMTk2LjkyMzA3NyAzNS40NDYxNTQgMjc1LjY5MjMwOCA5NC41MjMwNzdMMTUzLjYgNzg3LjY5MjMwOGMtNTkuMDc2OTIzLTc0LjgzMDc2OS05NC41MjMwNzctMTczLjI5MjMwOC05NC41MjMwNzctMjc1LjY5MjMwOEM1OS4wNzY5MjMgMjYzLjg3NjkyMyAyNjMuODc2OTIzIDU5LjA3NjkyMyA1MTIgNTkuMDc2OTIzeiBtMCA5MDUuODQ2MTU0Yy0xMDIuNCAwLTE5Ni45MjMwNzctMzUuNDQ2MTU0LTI3NS42OTIzMDgtOTQuNTIzMDc3TDg3MC40IDIzNi4zMDc2OTJjNTkuMDc2OTIzIDc0LjgzMDc2OSA5NC41MjMwNzcgMTczLjI5MjMwOCA5NC41MjMwNzcgMjc1LjY5MjMwOCAwIDI0OC4xMjMwNzctMjA0LjggNDUyLjkyMzA3Ny00NTIuOTIzMDc3IDQ1Mi45MjMwNzd6IiBmaWxsPSIjOTk5OTk5IiBwLWlkPSIyNjYyIj48L3BhdGg+PC9zdmc+"
		} else {
			nullImg = ""
		}

		return types.Img{Id: 0, Url: url1, Value: nullImg}
	}

	defer rows.Close()
	return result
}

func UpdateImg(url1 string) {
	// 除了更新工具本身之外，也要更新 img 表
	// 先看有没有，有的话就不管了，没有的话就创建
	urlEncoded := url.QueryEscape(url1)
	base64ImgValue := utils.GetImgBase64FromUrl(url1)
	if base64ImgValue == "" {
		return
	}
	sql_get_img := `
		SELECT * FROM nav_img
		WHERE url = ?;
		`

	rows, err := database.DB.Query(sql_get_img, urlEncoded)
	utils.CheckErr(err)
	defer rows.Close()
	if !rows.Next() {
		sql_add_img := `
		INSERT INTO nav_img (url, value)
		VALUES (?, ?);
		`
		stmt, err := database.DB.Prepare(sql_add_img)
		utils.CheckErr(err)
		_, err = stmt.Exec(urlEncoded, base64ImgValue)
		utils.CheckErr(err)
	}
}
